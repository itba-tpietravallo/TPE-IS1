name: Vercel Deployment
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

on:
    workflow_dispatch:
    push:
        paths:
            - "web/**"
            - "db/**"

jobs:
    Database-Changes:
        uses: ./.github/workflows/db-types.yaml
        secrets: inherit
    API-Tests:
        uses: ./.github/workflows/api-tests.yaml
        secrets: inherit
    Browser-Tests:
        needs: [Database-Changes]
        uses: ./.github/workflows/playwright.yml
        secrets: inherit
    Deploy:
        needs: [Browser-Tests, API-Tests]
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./web
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Extract branch name
              shell: bash
              run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
              id: extract_branch

            - name: Cache node modules
              uses: actions/cache@v3
              id: cache-modules
              with:
                  path: |
                      **/node_modules
                      ~/.npm
                  key: node_modules-${{ runner.os }}-deploy-${{hashFiles('package-lock.json')}}
                  restore-keys: node_modules-${{ runner.os }}-deploy-

            - name: Install Vercel CLI
              if: steps.cache-modules.outputs.cache-hit != 'true'
              run: npm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: npx vercel pull --yes --environment=${{ steps.extract_branch.outputs.branch == 'main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: npx vercel build --target=${{ steps.extract_branch.outputs.branch == 'main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}
              timeout-minutes: 2

            - name: Deploy Project Artifacts to Vercel
              id: deploy
              run: |
                  msg=`npx vercel deploy --prebuilt --target=${{ steps.extract_branch.outputs.branch == 'main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}`
                  echo "::notice title={[${{ steps.extract_branch.outputs.branch == 'main' && 'Production' || 'Preview' }}] Deployed on Vercel}::$msg"
                  echo "url=${msg}" >> $GITHUB_OUTPUT
              timeout-minutes: 2

            - name: Alias dev environment
              if: steps.extract_branch.outputs.branch != 'main'
              run: |
                  rm -f ~/.local/share/com.vercel.cli/auth.json || true
                  echo "${{ secrets.VERCEL_HARDCODED_CLI_AUTH_JSON }}" > ~/.local/share/com.vercel.cli/auth.json
                  npx vercel alias ${{ steps.deploy.outputs.url }} dev.matchpointapp.com.ar
              timeout-minutes: 2
