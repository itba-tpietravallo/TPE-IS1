name: Vercel Deployment
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

on:
    workflow_dispatch:
    push:
        paths:
            - "web/**"
            - "db/**"
        branches:
            - main

jobs:
    Database-Changes:
        uses: ./.github/workflows/db-types.yaml
        secrets: inherit
    Deploy:
        needs: [Database-Changes]
        runs-on: ubuntu-latest
        defaults:
          run:
              working-directory: ./web
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Cache node modules
              uses: actions/cache@v3
              id: cache-modules
              with:
                  path: |
                    node_modules
                  key: node_modules-${{ runner.os }}-deploy-${{hashFiles('web/package-lock.json')}}
                  restore-keys: node_modules-${{ runner.os }}-deploy-

            - name: Install Vercel CLI
              if: steps.cache-modules.outputs.cache-hit != 'true'
              run: npm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: npx vercel pull --yes --environment=${{ github.head_ref == 'main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
              timeout-minutes: 2

            - name: Deploy Project Artifacts to Vercel
              run: |
                  msg=`npx vercel deploy --prebuilt --target=${{ github.head_ref == 'main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}`
                  echo "::notice title={[${{ github.head_ref == 'main' && 'Production' || 'Preview' }}] Deployed on Vercel}::$msg"
              timeout-minutes: 2
