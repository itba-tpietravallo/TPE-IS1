name: Playwright Tests

on:
    workflow_call:
    workflow_dispatch:
    # push:
    #     branches: [main, dev]
    #     paths:
    #         - "web/tests/**"
    #         - "playwright.config.ts"
    pull_request:
        branches: [main, dev]
        paths:
            - "web/**"

jobs:
    Test:
        timeout-minutes: 5
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 3
            fail-fast: true
            matrix:
                browser: ["Desktop Chrome", "Desktop Firefox", "Desktop Safari"]
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Get installed Playwright version
              id: playwright-version
              run: echo "PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq --raw-output '.dependencies["@playwright/test"].version')" >> $GITHUB_ENV

            - uses: actions/cache@v3
              id: playwright-cache
              with:
                  path: "~/.cache/ms-playwright"
                  key: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
                  restore-keys: |
                      ${{ runner.os }}-playwright-
              env:
                  PLAYWRIGHT_VERSION: ${{ env.PLAYWRIGHT_VERSION }}

            - uses: actions/cache@v3
              id: node-cache
              with:
                  path: |
                      'node_modules'
                      'web/node_modules'
                  key: "${{ runner.os }}-playwright-node-${{ hashFiles('web/package-lock.json') }}"
                  restore-keys: |
                      ${{ runner.os }}-playwright-
                        
            - name: Load web env
              run: |
                cat ./web/.env | grep '^[^#]' >> "$GITHUB_ENV"

            - name: Install dependencies
              if: steps.node-cache.outputs.cache-hit != 'true'
              run: |
                  npm i
                  cd web && npm i && cd ..

            - name: Install Playwright Browsers
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps

            - name: Run Playwright tests
              run: npx playwright test
              env:
                  TEST_USER_EMAIL: ${{ env.TEST_USER_EMAIL }}
                  TEST_USER_PASSWORD: ${{ env.TEST_USER_PASSWORD }}
                  BROWSER: ${{ matrix.browser }}

            - uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30
