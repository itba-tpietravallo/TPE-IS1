version: "1.1"
name: Status Check

env:
    has_gcp_key: ""
    has_gmaps_key: ""

tests:
    healthcheck:
        steps:
            - name: GET request
              http:
                  url: ${{ env.origin }}/api/test
                  method: GET
                  check:
                      status: /^20/
    payments:
        steps:
            - name: GET payment link
              http:
                  url: ${{ env.origin }}/api/v1/payments
                  method: POST
                  headers:
                      access_token: ${{ secrets.access_token }}
                      refresh_token: ${{ secrets.refresh_token }}
                  json:
                      userId: ${{ secrets.user_id }}
                      processor: ""
                      fieldId: ""
                      success_url: "https://www.matchpointapp.com.ar"
                      pending_url: "https://www.matchpointapp.com.ar"
                      cancel_url: "https://www.matchpointapp.com.ar"
                      date_time: "2000-00-00T00:00:00Z"
                  check:
                      status: /400/
                      statusText: Invalid payment processor
                      # Note
                      # __DANGEROUS_createSupabaseServerClient_BYPASS_RLS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
                      # client cannot be used on locally atm, missing credentials
    geocode:
        steps:
            - if: env.has_gmaps_key == 1
              name: Geocode
              http:
                  url: ${{ env.origin }}/api/v1/geocode
                  method: POST
                  json:
                      street: "San Martin"
                      street_number: "200"
                      city: "Buenos Aires"
                  check:
                      status: /^20/
                      headers:
                          Content-Type: application/json
                      schema:
                          type: object
                          properties:
                              lat:
                                  type: number
                              lng:
                                  type: number
                          required:
                              - lat
                              - lng

    storage:
        steps:
            - if: env.has_gcp_key == 1
              name: PUT request
              http:
                  url: ${{ env.origin }}/api/v1/storage/upload
                  method: PUT
                  json:
                      fileName: "test.txt"
                  check:
                      status: /^20/
                      headers:
                          Content-Type: application/json
                      schema:
                          type: object
                          properties:
                              signedPUTURL:
                                  type: string
                              downloadURL:
                                  type: string
                          required:
                              - signedPUTURL
                              - downloadURL
